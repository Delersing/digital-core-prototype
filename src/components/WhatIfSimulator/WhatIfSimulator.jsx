import React, { useState } from 'react';

const WhatIfSimulator = ({ services, setServices }) => {
  const [selectedScenario, setSelectedScenario] = useState('normal');
  const [isRunning, setIsRunning] = useState(false);
  const [simulationEvents, setSimulationEvents] = useState([]);

  const scenarios = [
    {
      id: 'normal',
      name: '‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω–∞—è –†–∞–±–æ—Ç–∞',
      description: '–í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ',
      icon: 'üü¢'
    },
    {
      id: 'mdm-down',
      name: '‚ö†Ô∏è MDM –°–µ—Ä–≤–∏—Å –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
      description: '–°–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä-–¥–∞–Ω–Ω—ã–º–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
      icon: 'üî¥'
    },
    {
      id: 'sso-down',
      name: '‚ö†Ô∏è SSO –°–µ—Ä–≤–∏—Å –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
      description: '–°–µ—Ä–≤–∏—Å –µ–¥–∏–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
      icon: 'üî¥'
    },
    {
      id: 'legacy-down',
      name: '‚ö†Ô∏è –£–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–Ω–∞—è ERP –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
      description: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–Ω—ã–º —Å–∏—Å—Ç–µ–º–∞–º –ø–æ—Ç–µ—Ä—è–Ω–æ',
      icon: 'üü°'
    },
    {
      id: 'high-load',
      name: 'üî• –í—ã—Å–æ–∫–∞—è –ù–∞–≥—Ä—É–∑–∫–∞ (10x —Ç—Ä–∞—Ñ–∏–∫–∞)',
      description: '–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π',
      icon: 'üî•'
    }
  ];

  const runSimulation = (scenarioId) => {
    setIsRunning(true);
    setSimulationEvents([]);

    const events = [];
    const timestamp = new Date().toLocaleTimeString();

    switch (scenarioId) {
      case 'mdm-down':
        events.push({
          time: timestamp,
          type: 'alert',
          message: 'üö® –¢–†–ï–í–û–ì–ê: MDM –°–µ—Ä–≤–∏—Å –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
          details: '–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: –°—Ä–µ–¥–Ω–µ–µ - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã (2—á –¥–∞–≤–Ω–æ—Å—Ç–∏)'
        });
        events.push({
          time: timestamp,
          type: 'info',
          message: '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ä–µ–∑–µ—Ä–≤: –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ü–µ–Ω',
          details: '–ù–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –∑–∞–¥–µ—Ä–∂–∞–Ω—ã'
        });
        events.push({
          time: timestamp,
          type: 'success',
          message: '–ó–∞–ø—É—â–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π MDM —Å–µ—Ä–≤–µ—Ä',
          details: '–û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è: 2 –º–∏–Ω—É—Ç—ã'
        });

        // Update service status
        setServices(prev => prev.map(service =>
          service.id === 'mdm' ? { ...service, status: 'error' } : service
        ));
        break;

      case 'sso-down':
        events.push({
          time: timestamp,
          type: 'alert',
          message: 'üö® –ö–†–ò–¢–ò–ß–ù–û: SSO –°–µ—Ä–≤–∏—Å –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
          details: '–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: –í—ã—Å–æ–∫–æ–µ - –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–ª–∏–≤–∞—é—Ç—Å—è'
        });
        events.push({
          time: timestamp,
          type: 'warning',
          message: '–°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏—Å—Ç–µ–∫–∞—é—Ç, –Ω–æ–≤—ã–µ –ª–æ–≥–∏–Ω—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã',
          details: '–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –°-–ö-–ö —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã'
        });
        events.push({
          time: timestamp,
          type: 'info',
          message: '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞–≤–∞—Ä–∏–π–Ω—ã–π –æ–±—Ö–æ–¥ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
          details: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π'
        });

        setServices(prev => prev.map(service =>
          service.id === 'sso' ? { ...service, status: 'error' } : service
        ));
        break;

      case 'legacy-down':
        events.push({
          time: timestamp,
          type: 'warning',
          message: '‚ö†Ô∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –£–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–Ω–æ–π ERP –ü–æ—Ç–µ—Ä—è–Ω–æ',
          details: '–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: –ù–∏–∑–∫–æ–µ - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö B2B –∑–∞–¥–µ—Ä–∂–∞–Ω–∞'
        });
        events.push({
          time: timestamp,
          type: 'info',
          message: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏',
          details: 'B2C —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã, –ª–∏—á–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –°-–ö-–ö –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å'
        });

        setServices(prev => prev.map(service =>
          service.id === 'legacy-systems' ? { ...service, status: 'degraded' } : service
        ));
        break;

      case 'high-load':
        events.push({
          time: timestamp,
          type: 'warning',
          message: 'üî• –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –í—ã—Å–æ–∫–∞—è –ù–∞–≥—Ä—É–∑–∫–∞ (10x –æ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞)',
          details: '–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: –°—Ä–µ–¥–Ω–µ–µ - –£–≤–µ–ª–∏—á–µ–Ω–æ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞'
        });
        events.push({
          time: timestamp,
          type: 'info',
          message: '–ê–≤—Ç–æ–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ',
          details: '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã API –®–ª—é–∑–∞'
        });
        events.push({
          time: timestamp,
          type: 'info',
          message: '–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –Ω–∞–≥—Ä—É–∑–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞',
          details: '–¢—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ –≤—Å–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º —É–∑–ª–∞–º'
        });
        break;
    }

    setSimulationEvents(events);

    // Reset after 10 seconds
    setTimeout(() => {
      setIsRunning(false);
      setServices(prev => prev.map(service => ({ ...service, status: 'active' })));
      setSimulationEvents(prev => [...prev, {
        time: new Date().toLocaleTimeString(),
        type: 'success',
        message: '‚úÖ –°–∏–º—É–ª—è—Ü–∏—è –ó–∞–≤–µ—Ä—à–µ–Ω–∞ - –°–∏—Å—Ç–µ–º—ã –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã',
        details: '–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ'
      }]);
    }, 10000);
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <h2 className="text-2xl font-bold text-accent">
          üéÆ –°–∏–º—É–ª—è—Ç–æ—Ä "–ß—Ç–æ –ï—Å–ª–∏"
        </h2>
        <div className="flex items-center gap-2 text-sm text-secondary">
          <div className={`status-indicator ${isRunning ? 'status-warning' : 'status-active'}`}></div>
          <span>{isRunning ? '–°–∏–º—É–ª—è—Ü–∏—è –ó–∞–ø—É—â–µ–Ω–∞' : '–ì–æ—Ç–æ–≤'}</span>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Scenario Selection */}
        <div className="glass-card p-6">
          <h3 className="text-xl font-bold text-accent mb-4">
            –í—ã–±–µ—Ä–∏—Ç–µ –°—Ü–µ–Ω–∞—Ä–∏–π
          </h3>
          <div className="space-y-3">
            {scenarios.map((scenario) => (
              <div
                key={scenario.id}
                className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${
                  selectedScenario === scenario.id
                    ? 'border-accent bg-accent/10'
                    : 'border-white/10 hover:border-white/20'
                }`}
                onClick={() => setSelectedScenario(scenario.id)}
              >
                <div className="flex items-center gap-3">
                  <span className="text-2xl">{scenario.icon}</span>
                  <div>
                    <div className="font-semibold text-primary">
                      {scenario.name}
                    </div>
                    <div className="text-sm text-secondary">
                      {scenario.description}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>

          <button
            onClick={() => runSimulation(selectedScenario)}
            disabled={isRunning || selectedScenario === 'normal'}
            className={`w-full mt-6 py-3 rounded-lg font-semibold transition-all ${
              isRunning || selectedScenario === 'normal'
                ? 'bg-card/50 text-secondary cursor-not-allowed'
                : 'bg-accent text-background hover:bg-accent/90'
            }`}
          >
            {isRunning ? '–ó–∞–ø—É—Å–∫ –°–∏–º—É–ª—è—Ü–∏–∏...' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å –°–∏–º—É–ª—è—Ü–∏—é'}
          </button>
        </div>

        {/* Simulation Results */}
        <div className="glass-card p-6">
          <h3 className="text-xl font-bold text-accent mb-4">
            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –°–∏–º—É–ª—è—Ü–∏–∏
          </h3>

          {simulationEvents.length === 0 ? (
            <div className="text-center text-secondary py-8">
              <div className="text-4xl mb-4">üéØ</div>
              <div className="text-lg mb-2">–í—ã–±–µ—Ä–∏—Ç–µ –°—Ü–µ–Ω–∞—Ä–∏–π</div>
              <div className="text-sm">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π —Å–±–æ—è —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ –æ—Ç—Ä–µ–∞–≥–∏—Ä—É–µ—Ç</div>
            </div>
          ) : (
            <div className="space-y-3 max-h-96 overflow-y-auto">
              {simulationEvents.map((event, idx) => (
                <div
                  key={idx}
                  className={`p-3 rounded-lg border-l-4 ${
                    event.type === 'alert' ? 'border-l-error bg-error/10' :
                    event.type === 'warning' ? 'border-l-warning bg-warning/10' :
                    event.type === 'success' ? 'border-l-success bg-success/10' :
                    'border-l-accent bg-accent/10'
                  }`}
                >
                  <div className="flex items-start justify-between gap-2">
                    <div className="flex-1">
                      <div className="text-sm font-semibold text-primary">
                        {event.message}
                      </div>
                      <div className="text-xs text-secondary mt-1">
                        {event.details}
                      </div>
                    </div>
                    <span className="text-xs text-secondary font-mono">
                      {event.time}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>

      {/* System Resilience Summary */}
      <div className="glass-card p-6">
        <h3 className="text-xl font-bold text-accent mb-4">
          –§—É–Ω–∫—Ü–∏–∏ –£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –°–∏—Å—Ç–µ–º—ã
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="text-center p-4 bg-card/30 rounded-lg">
            <div className="text-2xl mb-2">üîÑ</div>
            <div className="font-semibold text-primary">–†–µ–∑–µ—Ä–≤–Ω—ã–µ –ú–µ—Ö–∞–Ω–∏–∑–º—ã</div>
            <div className="text-sm text-secondary">–ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ä–µ–∂–∏–º –¥–µ–≥—Ä–∞–¥–∞—Ü–∏–∏</div>
          </div>
          <div className="text-center p-4 bg-card/30 rounded-lg">
            <div className="text-2xl mb-2">üìä</div>
            <div className="font-semibold text-primary">–ê–≤—Ç–æ–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ</div>
            <div className="text-sm text-secondary">–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤</div>
          </div>
          <div className="text-center p-4 bg-card/30 rounded-lg">
            <div className="text-2xl mb-2">üõ°Ô∏è</div>
            <div className="font-semibold text-primary">–í—ã–∫–ª—é—á–∞—Ç–µ–ª–∏ –ó–∞—â–∏—Ç—ã</div>
            <div className="text-sm text-secondary">–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–∞–∑, –≥—Ä–∞—Ü–∏–æ–∑–Ω–∞—è –¥–µ–≥—Ä–∞–¥–∞—Ü–∏—è</div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default WhatIfSimulator;
