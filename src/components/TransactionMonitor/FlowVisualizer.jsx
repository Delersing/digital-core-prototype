import React from 'react';

const FlowVisualizer = ({ transaction }) => {
  const getServiceIcon = (serviceName) => {
    const icons = {
      'Gateway': 'üö™',
      '–®–ª—é–∑': 'üö™',
      'SSO': 'üîê',
      '–°–µ—Ä–≤–∏—Å –ï–¥–∏–Ω–æ–≥–æ –í—Ö–æ–¥–∞': 'üîê',
      'MDM': 'üìä',
      '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ú–∞—Å—Ç–µ—Ä-–î–∞–Ω–Ω—ã–º–∏': 'üìä',
      'Transaction': 'üí≥',
      '–°–µ—Ä–≤–∏—Å –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π': 'üí≥',
      'Loyalty': 'üéÅ',
      '–î–≤–∏–∂–æ–∫ –õ–æ—è–ª—å–Ω–æ—Å—Ç–∏': 'üéÅ',
      'ERP': 'üèõÔ∏è',
      '–ö–®–î': 'üîÑ',
      '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –®–∏–Ω–∞ –î–∞–Ω–Ω—ã—Ö': 'üîÑ',
      '–ö–•–î': 'üóÑÔ∏è',
      '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –•—Ä–∞–Ω–∏–ª–∏—â–µ –î–∞–Ω–Ω—ã—Ö': 'üóÑÔ∏è'
    };
    return icons[serviceName] || '‚öôÔ∏è';
  };

  const getServiceColor = (serviceName) => {
    if (serviceName === 'SSO') return 'text-purple-400';
    if (serviceName === 'MDM') return 'text-blue-400';
    if (serviceName === 'Transaction') return 'text-green-400';
    if (serviceName === 'Loyalty') return 'text-yellow-400';
    if (serviceName === 'ERP') return 'text-orange-400';
    return 'text-accent';
  };

  return (
    <div className="h-full flex flex-col">
      {/* Transaction Header */}
      <div className="mb-6 p-4 glass-card rounded-lg">
        <div className="flex items-center justify-between mb-2">
          <span className="text-sm font-mono text-secondary">{transaction.id}</span>
          <span className={`text-xs px-2 py-1 rounded ${
            transaction.status === 'SUCCESS'
              ? 'bg-success/20 text-success'
              : 'bg-error/20 text-error'
          }`}>
            {transaction.status === 'SUCCESS' ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}
          </span>
        </div>
        <div className="text-sm text-primary">
          {transaction.type} ‚Ä¢ {transaction.items[0]?.product}
        </div>
        <div className="text-xs text-secondary">
          {transaction.user.name}
          {transaction.company && ` ‚Ä¢ ${transaction.company.name}`}
        </div>
        <div className="text-xs text-accent font-mono mt-1">
          –ò—Ç–æ–≥–æ: {transaction.totalDuration}–º—Å
        </div>
      </div>

      {/* Timeline */}
      <div className="flex-1 relative">
        <div className="absolute left-6 top-0 bottom-0 w-0.5 bg-gradient-to-b from-accent via-purple-400 to-green-400"></div>

        <div className="space-y-4">
          {transaction.steps.map((step, idx) => (
            <div key={idx} className="relative flex items-center gap-4">
              {/* Timeline Node */}
              <div className={`relative z-10 w-12 h-12 rounded-full border-2 flex items-center justify-center ${
                step.service === 'SSO' ? 'border-purple-400 bg-purple-400/20' :
                step.service === 'MDM' ? 'border-blue-400 bg-blue-400/20' :
                step.service === 'Transaction' ? 'border-green-400 bg-green-400/20' :
                step.service === 'Loyalty' ? 'border-yellow-400 bg-yellow-400/20' :
                step.service === 'ERP' ? 'border-orange-400 bg-orange-400/20' :
                'border-accent bg-accent/20'
              }`}>
                <span className="text-lg">{getServiceIcon(step.service)}</span>
              </div>

              {/* Step Details */}
              <div className="flex-1 glass-card p-4">
                <div className="flex items-center justify-between mb-2">
                  <div className="flex items-center gap-2">
                    <span className={`font-semibold ${getServiceColor(step.service)}`}>
                      {step.service}
                    </span>
                    <span className="text-xs text-secondary font-mono">
                      {step.duration}ms
                    </span>
                  </div>
                  <span className="text-success text-sm">‚úì</span>
                </div>

                {/* Step-specific information */}
                <div className="space-y-1 text-xs">
                  {step.context && (
                    <div className="text-purple-300">
                      –ö–æ–Ω—Ç–µ–∫—Å—Ç: {step.context}
                    </div>
                  )}
                  {step.linkedAccount && (
                    <div className="text-cyan-300">
                      –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–≤—è–∑–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
                    </div>
                  )}
                  {step.priceApplied && (
                    <div className="text-green-300">
                      –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Ü–µ–Ω–∞: {step.priceApplied} BYN
                      {step.priceType && ` (${step.priceType})`}
                    </div>
                  )}
                  {step.pointsAwarded > 0 && (
                    <div className="text-yellow-300">
                      –ù–∞—á–∏—Å–ª–µ–Ω–æ –±–∞–ª–ª–æ–≤: +{step.pointsAwarded}
                      {step.isCrossReward && ' (–∫—Ä–æ—Å—Å-–Ω–∞–≥—Ä–∞–¥–∞!)'}
                    </div>
                  )}
                  {step.action && (
                    <div className="text-orange-300">
                      –î–µ–π—Å—Ç–≤–∏–µ: {step.action}
                    </div>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Final Result */}
        <div className="mt-6 p-4 glass-card rounded-lg border border-success/30">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-success">‚úì</span>
            <span className="font-semibold text-success">–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ó–∞–≤–µ—Ä—à–µ–Ω–∞</span>
          </div>
          <div className="text-sm text-secondary">
            –û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: <span className="text-accent font-mono">{transaction.totalDuration}–º—Å</span>
          </div>
          {transaction.isCtC && (
            <div className="mt-2 text-xs text-cyan-300">
              ‚≠ê –°-–ö-–ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
            </div>
          )}
        </div>
      </div>

      {/* Performance Summary */}
      <div className="mt-4 grid grid-cols-2 gap-4">
        <div className="glass-card p-3 text-center">
          <div className="text-lg font-bold text-accent">
            {transaction.steps.length}
          </div>
          <div className="text-xs text-secondary">–°–µ—Ä–≤–∏—Å–æ–≤</div>
        </div>
        <div className="glass-card p-3 text-center">
          <div className="text-lg font-bold text-green-400">
            {transaction.totalDuration}–º—Å
          </div>
          <div className="text-xs text-secondary">–û–±—â–µ–µ –í—Ä–µ–º—è</div>
        </div>
      </div>
    </div>
  );
};

export default FlowVisualizer;
